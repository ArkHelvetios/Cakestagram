{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://cakestagram/./source/js/utility.js","webpack://cakestagram/./source/js/photo/temporary-data.js","webpack://cakestagram/./source/js/photo/render-big-photo.js","webpack://cakestagram/./source/js/photo/popup-handler.js","webpack://cakestagram/./source/js/photo/thumbnails.js","webpack://cakestagram/./source/js/upload/scale.js","webpack://cakestagram/./source/js/upload/effects.js","webpack://cakestagram/./source/js/upload/popup-handler.js","webpack://cakestagram/./source/js/upload/upload.js"],"sourcesContent":["const getRandomNum = (min = 0, max = 100) => {\n  let result = Math.floor(Math.random() * (max - min + 1) + min);\n\n  if ((min < 0 || max < 0) || (min == max)) return -1;\n  if (min > max) [min, max] = [max, min];\n\n  return result\n};\n\nconst isEscEvent = (evt) => {\n  return evt.key === 'Escape' || evt.key === 'Esc';\n};\n\nconst checkMessageLength = (message = '', maxLength = 180) => {\n  return message.length <= maxLength;\n}\n\nexport {\n  getRandomNum,\n  isEscEvent,\n  checkMessageLength\n}\n","import { getRandomNum } from '../utility.js';\n\nconst OBJECTS_COUNT = 25;\nconst LikesRange = { MIN: 14, MAX: 200 };\nconst CommentsRange = { MIN: 1, MAX: 5 };\nconst CommentsIDsRange = { MIN: 1, MAX: 999};\nconst AvatarsIDsRange = { MIN: 1, MAX: 6 }\n\nconst descriptions = [\n  'Кошка вполне может быть лучшим другом человека, но никогда не опустится до того, чтобы это признать.',\n  'Говорят, что кошки трусливы, злы и жестоки. Это верно, и у них еще много других достоинств.',\n  'Женщины и кошки не идут, когда их зовут, и приходят, когда их не звали.',\n  'Я долго изучал философов и долго изучал кошек. Кошки бесконечно мудрее.',\n  'Люди, которые не выносят кошек, в своей следующей жизни будут мышами.',\n  'Кошки созданы, чтобы показать нам: не все в природе имеет назначение.',\n  'Кошка никогда не допустит, чтобы ее увидели в нефотогеничной позе.',\n  'Как знает каждый владелец кошки, кошка не может иметь владельца.',\n  'Если бы кошки умели говорить, они бы все равно молчали.',\n  'Любить кошку можно только на ее собственных условиях.',\n];\n\nconst names = [\n  'Кирилл Федоров',\n  'Кира Исаева',\n  'Виктория Карпова',\n  'Александра Уварова',\n  'Матвей Новиков',\n  'Алия Васильева',\n  'Алина Романова',\n  'Дарья Овчинникова',\n  'Михаил Тимофеев',\n  'Елизавета Поликарпова',\n];\n\nconst messages = [\n  'Всё отлично!',\n  'В целом всё неплохо. Но не всё.',\n  'Когда вы делаете фотографию, хорошо бы убирать палец из кадра. В конце концов это просто непрофессионально.',\n  'Моя бабушка случайно чихнула с фотоаппаратом в руках и у неё получилась фотография лучше.',\n  'Я поскользнулся на банановой кожуре и уронил фотоаппарат на кота и у меня получилась фотография лучше.',\n  'Лица у людей на фотке перекошены, как будто их избивают. Как можно было поймать такой неудачный момент?!',\n];\n\nlet photoData = [];\n\nconst createComments = () => {\n  let commentsData = [];\n\n  for (let i = 1; i <= getRandomNum(CommentsRange.MIN, CommentsRange.MAX); i++) {\n    commentsData.push({\n      id: getRandomNum(CommentsIDsRange.MIN, CommentsIDsRange.MAX),\n      name: names[getRandomNum(0, names.length)],\n      avatar: `img/avatar-${getRandomNum(AvatarsIDsRange.MIN, AvatarsIDsRange.MAX)}.svg`,\n      message: messages[getRandomNum(0, messages.length - 1)],\n    })\n  }\n\n  return commentsData\n};\n\nconst createPhoto = () => {\n  for (let i = 1; i <= OBJECTS_COUNT; i++) {\n    photoData.push({\n      id: i,\n      url: `photos/${i}.jpg`,\n      description: descriptions[getRandomNum(0, descriptions.length - 1)],\n      likes: getRandomNum(LikesRange.MIN, LikesRange.MAX),\n      comments: createComments(),\n    })\n  }\n};\n\ncreatePhoto();\n\nexport { photoData };\n","import { photoData } from './temporary-data.js';\n\nconst bigPhotoWrapper = document.querySelector('.big-picture');\nconst commentsWrapper = bigPhotoWrapper.querySelector('.social__comments');\nconst commentTemplate = commentsWrapper.querySelector('.social__comment');\n\nconst renderBigPhoto = (thumbnail) => {\n  const photoID = parseInt(thumbnail.id.match(/[0-9]+/g)); // RegExp\n  const photo = photoData.find((photo) => photo.id === photoID);\n\n  const { url, description, likes, comments } = photo;\n  bigPhotoWrapper.querySelector('.big-picture__img > img').src = url;\n  bigPhotoWrapper.querySelector('.social__caption').textContent = description;\n  bigPhotoWrapper.querySelector('.likes-count').textContent = likes;\n  bigPhotoWrapper.querySelector('.comments-count').textContent = comments.length;\n\n  const commentFragment = document.createDocumentFragment();\n\n  photo.comments.forEach(({ id, name, avatar, message }) => {\n    const commentElement = commentTemplate.cloneNode(true);\n    const commentAvatar = commentElement.querySelector('.social__picture');\n\n    commentAvatar.src = avatar;\n    commentAvatar.alt = name;\n    commentElement.id = `photo-${photoID}-${id}`;\n    commentElement.querySelector('.social__text').textContent = message;\n    commentFragment.appendChild(commentElement);\n  })\n\n  commentsWrapper.appendChild(commentFragment);\n}\n\nconst clearBigPhoto = () => {\n  commentsWrapper.innerHTML = '';\n}\n\nexport {\n  renderBigPhoto,\n  clearBigPhoto,\n  bigPhotoWrapper\n}\n","import { isEscEvent } from '../utility.js';\nimport { renderBigPhoto, clearBigPhoto, bigPhotoWrapper } from './render-big-photo.js';\n\nconst onPopupEscKeydown = (evt) => {\n  if (isEscEvent(evt)) {\n    evt.preventDefault;\n    closePopup();\n  }\n};\n\nconst openPopup = (thumbnail) => {\n  renderBigPhoto(thumbnail);\n\n  bigPhotoWrapper.classList.remove('hidden');\n  document.body.classList.add('modal-open');\n  document.addEventListener('keydown', onPopupEscKeydown);\n\n  const closeButton = bigPhotoWrapper.querySelector('.cancel');\n  closeButton.addEventListener('click', () => {\n    closePopup()\n  });\n};\n\nconst closePopup = () => {\n  bigPhotoWrapper.classList.add('hidden');\n  document.body.classList.remove('modal-open');\n  document.removeEventListener('keydown', onPopupEscKeydown);\n\n  clearBigPhoto()\n}\n\nexport { openPopup }\n","import { photoData } from './temporary-data.js';\nimport { openPopup } from './popup-handler.js';\n\nconst thumbnailTemplate = document.querySelector('#picture').content.querySelector('.picture');\nconst thumbnailsWrapper = document.querySelector('.pictures');\nconst thumbnailsWrapperFragment = document.createDocumentFragment();\n\nphotoData.forEach(({ id, url, likes, comments }) => {\n  const thumbnailElement = thumbnailTemplate.cloneNode(true);\n  thumbnailElement.tabIndex = '0';\n  thumbnailElement.id = `photo-${id}-thumbnail`;\n  thumbnailElement.querySelector('.picture__img').src = url;\n  thumbnailElement.querySelector('.picture__likes').textContent = likes;\n  thumbnailElement.querySelector('.picture__comments').textContent = comments.length;\n  thumbnailsWrapperFragment.appendChild(thumbnailElement);\n})\n\nthumbnailsWrapper.appendChild(thumbnailsWrapperFragment);\n\nthumbnailsWrapper.addEventListener('click', (evt) => {\n  const thumbnail = evt.target.closest('.picture');\n\n  if (thumbnail) {\n    evt.preventDefault;\n    openPopup(thumbnail)\n  }\n});\n","import { uploadedPhoto } from './upload.js';\n\nconst SCALE_DEFAULT = 100;\nconst SCALE_STEP = 25;\nconst ScaleRange = { MIN: 25, MAX: 100 };\n\nconst scaleControlsWrapper = document.querySelector('.img-upload__scale');\nconst scaleSmaller = scaleControlsWrapper.querySelector('.scale__control--smaller');\nconst scaleBigger = scaleControlsWrapper.querySelector('.scale__control--bigger');\nconst scaleInput = scaleControlsWrapper.querySelector('.scale__control--value');\n\nlet currentValue = 0;\n\nconst setScale = (value) => {\n  currentValue = value;\n  scaleInput.value = `${currentValue}%`;\n  uploadedPhoto.style.transform = `scale(${currentValue / 100})`\n}\n\nconst changeScale = (direction) => {\n  let newValue =  currentValue + (SCALE_STEP * direction);\n  if (newValue > ScaleRange.MAX || newValue < ScaleRange.MIN) return;\n  setScale(newValue);\n}\n\nconst scaleUp = () => changeScale(1);\nconst scaleDown = () => changeScale(-1);\n\nconst addScaleHandler = () => {\n  setScale(SCALE_DEFAULT);\n\n  scaleBigger.addEventListener('click', scaleUp);\n  scaleSmaller.addEventListener('click', scaleDown);\n}\n\nconst removeScaleHandler = () => {\n  scaleBigger.removeEventListener('click', scaleUp);\n  scaleSmaller.removeEventListener('click', scaleDown);\n}\n\nexport { addScaleHandler, removeScaleHandler }\n","import { uploadedPhoto } from './upload.js';\n\nconst form = document.querySelector('.img-upload__form')\n/* const levelValue = form.querySelector('.effect-level__value');\nconst levelSlider = form.querySelector('.effect-level__slider'); */\n\nconst effectChangeHandler = (evt) => {\n  if (evt.target.matches('input[name=\"effect\"]')) {\n    uploadedPhoto.className = '';\n    uploadedPhoto.classList.add(`effects__preview--${evt.target.value}`)\n  }\n};\n\nconst addEffectsHandler = () => {\n\n  form.addEventListener('change', effectChangeHandler);\n}\n\nconst removeEffectsHandler = () => {\n  uploadedPhoto.className = '';\n  form.removeEventListener('change', effectChangeHandler);\n}\n\nexport { addEffectsHandler, removeEffectsHandler }\n","import { isEscEvent } from '../utility.js';\nimport { addScaleHandler, removeScaleHandler } from './scale.js';\nimport { addEffectsHandler, removeEffectsHandler } from './effects.js'\n\nconst uploadWrapper = document.querySelector('.img-upload__overlay');\n\nconst onPopupEscKeydown = (evt) => {\n  if (isEscEvent(evt)) {\n    evt.preventDefault;\n    closePopup();\n  }\n}\n\nconst openPopup = () => {\n  addScaleHandler();\n  addEffectsHandler();\n\n  uploadWrapper.classList.remove('hidden');\n  document.body.classList.add('modal-open');\n  document.addEventListener('keydown', onPopupEscKeydown);\n\n  const closeButton = uploadWrapper.querySelector('.cancel');\n  closeButton.addEventListener('click', () => {\n    closePopup()\n  });\n};\n\nconst closePopup = () => {\n  uploadWrapper.classList.add('hidden');\n  document.body.classList.remove('modal-open');\n  document.removeEventListener('keydown', onPopupEscKeydown);\n\n  removeScaleHandler();\n  removeEffectsHandler();\n};\n\nexport { openPopup }\n","import { openPopup } from './popup-handler.js';\n\nconst form = document.querySelector('.img-upload__form')\nconst uploadInput = form.querySelector('.img-upload__input');\nconst uploadedPhoto = form.querySelector('.img-upload__preview > img');\n\nuploadInput.addEventListener('change', () => {\n  uploadedPhoto.addEventListener('load', () => {\n    URL.revokeObjectURL(uploadedPhoto.src)\n  });\n\n  uploadedPhoto.src = URL.createObjectURL(uploadInput.files[0]);\n  openPopup();\n});\n\nexport { form, uploadedPhoto }\n"],"names":["getRandomNum","min","max","result","Math","floor","random","isEscEvent","evt","key","descriptions","names","messages","photoData","createComments","commentsData","i","push","id","name","length","avatar","message","url","description","likes","comments","createPhoto","bigPhotoWrapper","document","querySelector","commentsWrapper","commentTemplate","onPopupEscKeydown","preventDefault","closePopup","classList","add","body","remove","removeEventListener","innerHTML","thumbnailTemplate","content","thumbnailsWrapper","thumbnailsWrapperFragment","createDocumentFragment","forEach","thumbnailElement","cloneNode","tabIndex","src","textContent","appendChild","addEventListener","thumbnail","target","closest","photoID","parseInt","match","photo","find","commentFragment","commentElement","commentAvatar","alt","renderBigPhoto","openPopup","scaleControlsWrapper","scaleSmaller","scaleBigger","scaleInput","currentValue","setScale","value","uploadedPhoto","style","transform","changeScale","direction","newValue","scaleUp","scaleDown","effectChangeHandler","matches","className","uploadWrapper","uploadInput","URL","revokeObjectURL","createObjectURL","files"],"sourceRoot":""}